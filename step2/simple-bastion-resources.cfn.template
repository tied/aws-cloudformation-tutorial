{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Deploy resources required for a simple Bastion",

  "Parameters": {
    
    "VpcId" : {
      "Type": "String",
      "Description" : "ID of the VPC you are deploying to."  
    },
    
    "AvailabilityZone1" : {
      "Description" : "AZ to use for VPN",
      "Type" : "String"
    },
    
    "InternetGateway": {
      "Description": "The ID of the Internet Gateway attached to the VPC.",
      "Type": "String"
    },
    
    "VpnGateway": {
      "Description": "The ID of the VPN Gateway attached to the VPC that provides connectivity to LMN C1.",
      "Type": "String"
    },
    
    "PubNet01" : {
      "Description" : "A Public VPC subnet ID.",
      "Type": "String"
    },
       
    "LmnPublic" : {
      "Description" : "Address range in CIDR format for LMN access to resources.",
      "Type" : "String"
    },
    
    "ProjectName": {
      "Description": "The generic Stack project name",
      "Type": "String"
    },
    
    "EnvSuffix": {
      "Description": "The key of the template for the EB resources and application substack",
      "Type": "String"
    }
    
  },

  "Resources": {  
    
    "PubSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "AvailabilityZone" : { "Ref" : "AvailabilityZone1" },
        "CidrBlock" : { "Ref" : "PubNet01" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "EnvSuffix" }, " Public Subnet 1" ] ] } }
        ]
      }
    },
    
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "EnvSuffix" }, " Public Route Table" ] ] } }
        ]
      }
    },
    
    "PublicRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    
    "PublicRoute2" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "10.28.0.0/16",
        "GatewayId" : { "Ref" : "VpnGateway" }
      }
    }, 
    
    "PubSubnet1RTAssoc" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PubSubnet1" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    
    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [         
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AWS::StackName" }, "Network Acl" ] ] } },
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "EnvSuffix" }, " Public NACL" ] ] } }
        ]
      }
    },
    
    "LmnPublicTcp22ToPublic" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "CidrBlock" : { "Ref" : "LmnPublic" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "Protocol" : "6",
        "RuleAction" : "allow",
        "RuleNumber" : "10",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },
    
    "DefaultPublicOutboundNAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "CidrBlock" : "0.0.0.0/0",
        "Egress" : "true",
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "RuleNumber" : "100"
      }
    },
    
    "PubSubnet1toPublicNAclAssoc" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	  "Properties" : {
   		"SubnetId" : { "Ref" : "PubSubnet1" },
   		"NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
	  }
    }, 
    
    "SimpleBastionSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG that public bastions launch into.",
        "VpcId": { "Ref": "VpcId" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AWS::StackName" }, "Bastion SG" ] ] } },
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "EnvSuffix" }, " Bastion SG" ] ] } }
        ]        
      }
    } 

  },


  "Outputs" : {
    
	"PubNet01" : {
      "Value" : { "Ref" : "PubSubnet1" },
      "Description" : "Public SubnetId."
    },
    
    "SimpleBastionSG" : {
      "Value" : { "Ref" : "SimpleBastionSG" },
      "Description" : "Public IP Name of our Bastion."
    }
    
  }
}